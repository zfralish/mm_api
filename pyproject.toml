[tool.poetry]
name = "mm_api"
version = "0.1.0"
description = ""
authors = []
maintainers = []
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.100.0"
uvicorn = { version = "^0.22.0", extras = ["standard"] }
gunicorn = "^21.2.0"
pydantic = "^2"
pydantic-settings = "^2"
yarl = "^1.9.2"
ujson = "^5.8.0"
SQLAlchemy = { version = "^2.0.18", extras = ["asyncio"] }
alembic = "^1.11.1"
asyncpg = { version = "^0.28.0", extras = ["sa"] }
redis = { version = "^4.6.0", extras = ["hiredis"] }
httptools = "^0.6.0"
sentry-sdk = "^1.27.1"
loguru = "^0.7.0"
faker = "^26.0.0"
numpy = "^2.0.0"
click = "^8.1.7"
pyjwt = { extras = ["crypto"], version = "^2.8.0" }


[tool.poetry.dev-dependencies]
pytest = "^7.2.1"
flake8 = "~7.0.0"
mypy = "^1.1.1"
isort = "^5.11.4"
pre-commit = "^3.0.1"
wemake-python-styleguide = "^0.19.2"
black = "^22.12.0"
autoflake = "^1.6.1"
pytest-cov = "^4.0.0"
anyio = "^3.6.2"
pytest-env = "^0.8.1"
fakeredis = "^2.5.0"
httpx = "^0.23.3"

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["mm_api"]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true

# Remove this and add `types-redis`
# when the issue https://github.com/python/typeshed/issues/8242 is resolved.
[[tool.mypy.overrides]]
module = ['redis.asyncio']
ignore_missing_imports = true

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
env = [
    "MM_API_ENVIRONMENT=pytest",
    "MM_API_DB_BASE=mm_api_test",
    "MM_API_SENTRY_DSN=",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
venvPath = "/Users/zfralish/Library/Caches/pypoetry/virtualenvs/"
venv = "mm-api-GujL8BXy-py3.12"
